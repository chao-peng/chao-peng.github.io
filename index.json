[{"authors":["admin"],"categories":null,"content":"Chao Peng （彭超） is a PhD candidate at the Laboratory for Foundations of Computer Science (LFCS), School of Informatics, The University of Edinburgh. He holds an MSc in High Performance Computing with Data Science from the University of Edinburgh and a BEng in Computer Science and Technology from Xuzhou University of Technology. During his MSc, he was a member of Team EPCC for the International Supercomputing Conference Student Cluster Competition.\nHis research interest lies in the area of massively parallel architectures and programming. He is currently doing research in defining code coverage metrics for GPU programs and automated test case generation, reduction and execution. His supervisor is Dr. Ajitha Rajan.\nEmail: ku.ca.de@gnep.oahc\n","date":1550759523,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1550759523,"objectID":"3eef613d86e546bf0ce1d3fb271035e3","permalink":"https://chao-peng.github.io/author/chao/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/chao/","section":"author","summary":"Chao Peng （彭超） is a PhD candidate at the Laboratory for Foundations of Computer Science (LFCS), School of Informatics, The University of Edinburgh. He holds an MSc in High Performance Computing with Data Science from the University of Edinburgh and a BEng in Computer Science and Technology from Xuzhou University of Technology. During his MSc, he was a member of Team EPCC for the International Supercomputing Conference","tags":null,"title":"Chao Peng","type":"author"},{"authors":["Chao Peng","Ajitha Rajan"],"categories":null,"content":"","date":1546272000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550759523,"objectID":"7e0be6aad3b6512a7eefe822ae06aaae","permalink":"https://chao-peng.github.io/publication/cltestcheck/","publishdate":"2019-01-01T00:00:00+08:00","relpermalink":"/publication/cltestcheck/","section":"publication","summary":"Massive parallelism, and energy efficiency of GPUs, along with \nadvances in their programmability with OpenCL and CUDA programming models have made them attractive for general-purpose computations across many application domains.\nTechniques for testing GPU kernels have emerged recently to aid the construction of correct GPU software. \nHowever, there exists no means of measuring quality and effectiveness of tests developed for GPU kernels. \nTraditional coverage criteria over CPU programs is not adequate over GPU kernels as it uses a completely different programming model and the faults encountered may be  specific to the GPU architecture. \nGPUs have SIMT (single instruction, multiple thread) execution model that executes batches of threads (work groups) in lock-step, i.e all threads in a work group execute the same instruction but on different data.  \n\nWe address this need in this paper and present a framework, CLTestCheck, for assessing quality of test suites developed for OpenCL kernels. The framework has the following capabilities, \n1. Measures kernel code coverage using three different coverage metrics that are inspired by faults found in real kernel code, 2. Seeds different types of faults in kernel code and measures fault finding capability of test suite, 3. Simulates different work group schedules to check for potential data races with the given test suite. We conducted empirical evaluation of CLTestCheck on a collection of 82 publicly available GPU kernels and test suites. We found that CLTestCheck is capable of automatically measuring effectiveness of test suites, in terms of kernel code coverage, fault finding and revealing data races in real OpenCL kernels. \n","tags":[],"title":"CLTestCheck: Measuring Test Effectiveness for GPU Kernels","type":"publication"}]